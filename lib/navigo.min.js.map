{"version":3,"file":"navigo.min.js","sources":["../src/index.js"],"sourcesContent":["function isPushStateAvailable() {\r\n  return !!(\r\n    typeof window !== 'undefined' &&\r\n    window.history &&\r\n    window.history.pushState\r\n  );\r\n}\r\n\r\nfunction Navigo(r, useHash, hash) {\r\n  this.root = null;\r\n  this._routes = [];\r\n  this._useHash = useHash;\r\n  this._hash = typeof hash === 'undefined' ? '#' : hash;\r\n  this._paused = false;\r\n  this._destroyed = false;\r\n  this._lastRouteResolved = null;\r\n  this._notFoundHandler = null;\r\n  this._defaultHandler = null;\r\n  this._usePushState = !useHash && isPushStateAvailable();\r\n  this._onLocationChange = this._onLocationChange.bind(this);\r\n  this._genericHooks = null;\r\n  this._historyAPIUpdateMethod = 'pushState';\r\n\r\n  if (r) {\r\n    this.root = useHash ? r.replace(/\\/$/, '/' + this._hash) : r.replace(/\\/$/, '');\r\n  } else if (useHash) {\r\n    this.root = this._cLoc().split(this._hash)[0].replace(/\\/$/, '/' + this._hash);\r\n  }\r\n\r\n  this._listen();\r\n  this.updatePageLinks();\r\n}\r\n\r\nfunction clean(s) {\r\n  if (s instanceof RegExp) return s;\r\n  return s.replace(/\\/+$/, '').replace(/^\\/+/, '^/');\r\n}\r\n\r\nfunction regExpResultToParams(match, names) {\r\n  if (names.length === 0) return null;\r\n  if (!match) return null;\r\n  return match\r\n    .slice(1, match.length)\r\n    .reduce((params, value, index) => {\r\n      if (params === null) params = {};\r\n      /*\r\n        調整下面這行的目的：為了解決我的網站前端和後端的衝突。\r\n\r\n        wordpress 在儲存發表物 slug 時，會先以 url 編碼。\r\n        之後當它要透過頁面或 rest api 輸出 slug 時，仍是直接輸出編碼後的 slug。\r\n\r\n        然而，當 navigo 透過 regExpResultToParams 解析路徑以提供參數給對應的處理函式時，卻會解析這些路徑。\r\n        這使我用來記錄 slug 是發文或專頁的功能 ── registryOfPostAndPage ── 在路徑有編碼過的中文時，\r\n        無法根據路徑參數找到對應的文章型態。\r\n\r\n        在考慮數種辦法以解決這個衝突之後，我決定從這邊下手，拿掉下面這行的 decodeURIComponent 作業。\r\n        採用這種作法的原因是前後端要改的程式碼都比較少，而且不需要了解相對複雜的 wordpress 後端設計。\r\n      */\r\n      params[names[index]] = value;\r\n      return params;\r\n    }, null);\r\n}\r\n\r\nfunction replaceDynamicURLParts(route) {\r\n  var paramNames = [], regexp;\r\n\r\n  if (route instanceof RegExp) {\r\n    regexp = route;\r\n  } else {\r\n    regexp = new RegExp(\r\n      route.replace(Navigo.PARAMETER_REGEXP, function (full, dots, name) {\r\n        paramNames.push(name);\r\n        return Navigo.REPLACE_VARIABLE_REGEXP;\r\n      })\r\n        .replace(Navigo.WILDCARD_REGEXP, Navigo.REPLACE_WILDCARD) + Navigo.FOLLOWED_BY_SLASH_REGEXP\r\n      , Navigo.MATCH_REGEXP_FLAGS);\r\n  }\r\n  return { regexp, paramNames };\r\n}\r\n\r\nfunction getUrlDepth(url) {\r\n  return url.replace(/\\/$/, '').split('/').length;\r\n}\r\n\r\nfunction compareUrlDepth(urlA, urlB) {\r\n  return getUrlDepth(urlB) - getUrlDepth(urlA);\r\n}\r\n\r\nfunction findMatchedRoutes(url, routes = []) {\r\n  return routes\r\n    .map(route => {\r\n      var { regexp, paramNames } = replaceDynamicURLParts(clean(route.route));\r\n      var match = url.replace(/^\\/+/, '/').match(regexp);\r\n      var params = regExpResultToParams(match, paramNames);\r\n\r\n      return match ? { match, route, params } : false;\r\n    })\r\n    .filter(m => m);\r\n}\r\n\r\nfunction match(url, routes) {\r\n  return findMatchedRoutes(url, routes)[0] || false;\r\n}\r\n\r\nfunction root(url, routes) {\r\n  var matched = routes.map(\r\n    route => route.route === '' || route.route === '*' ? url : url.split(new RegExp(route.route + '($|\\/)'))[0]\r\n  );\r\n  var fallbackURL = clean(url);\r\n\r\n  if (matched.length > 1) {\r\n    return matched.reduce((result, url) => {\r\n      if (result.length > url.length) result = url;\r\n      return result;\r\n    }, matched[0]);\r\n  } else if (matched.length === 1) {\r\n    return matched[0];\r\n  }\r\n  return fallbackURL;\r\n}\r\n\r\nfunction isHashChangeAPIAvailable() {\r\n  return typeof window !== 'undefined' && 'onhashchange' in window;\r\n}\r\n\r\nfunction extractGETParameters(url) {\r\n  return url.split(/\\?(.*)?$/).slice(1).join('');\r\n}\r\n\r\nfunction getOnlyURL(url, useHash, hash) {\r\n  var onlyURL = url, split;\r\n  var cleanGETParam = str => str.split(/\\?(.*)?$/)[0];\r\n\r\n  if (typeof hash === 'undefined') {\r\n    // To preserve BC\r\n    hash = '#';\r\n  }\r\n\r\n  if (isPushStateAvailable() && !useHash) {\r\n    onlyURL = cleanGETParam(url).split(hash)[0];\r\n  } else {\r\n    split = url.split(hash);\r\n    onlyURL = split.length > 1 ? cleanGETParam(split[1]) : cleanGETParam(split[0]);\r\n  }\r\n\r\n  return onlyURL;\r\n}\r\n\r\nfunction manageHooks(handler, hooks, params) {\r\n  if (hooks && typeof hooks === 'object') {\r\n    if (hooks.before) {\r\n      hooks.before((shouldRoute = true) => {\r\n        if (!shouldRoute) return;\r\n        handler();\r\n        hooks.after && hooks.after(params);\r\n      }, params);\r\n      return;\r\n    } else if (hooks.after) {\r\n      handler();\r\n      hooks.after && hooks.after(params);\r\n      return;\r\n    }\r\n  }\r\n  handler();\r\n}\r\n\r\nfunction isHashedRoot(url, useHash, hash) {\r\n  if (isPushStateAvailable() && !useHash) {\r\n    return false;\r\n  }\r\n\r\n  if (!url.match(hash)) {\r\n    return false;\r\n  }\r\n\r\n  let split = url.split(hash);\r\n\r\n  return split.length < 2 || split[1] === '';\r\n}\r\n\r\nNavigo.prototype = {\r\n  helpers: {\r\n    match,\r\n    root,\r\n    clean,\r\n    getOnlyURL\r\n  },\r\n  navigate: function (path, absolute) {\r\n    var to;\r\n\r\n    path = path || '';\r\n    if (this._usePushState) {\r\n      to = (!absolute ? this._getRoot() + '/' : '') + path.replace(/^\\/+/, '/');\r\n      to = to.replace(/([^:])(\\/{2,})/g, '$1/');\r\n      history[this._historyAPIUpdateMethod]({}, '', to);\r\n      this.resolve();\r\n    } else if (typeof window !== 'undefined') {\r\n      path = path.replace(new RegExp('^' + this._hash), '');\r\n      window.location.href =\r\n        window.location.href\r\n          .replace(/#$/, '')\r\n          .replace(new RegExp(this._hash + '.*$'), '') + this._hash + path;\r\n    }\r\n    return this;\r\n  },\r\n  on: function (...args) {\r\n    if (typeof args[0] === 'function') {\r\n      this._defaultHandler = { handler: args[0], hooks: args[1] };\r\n    } else if (args.length >= 2) {\r\n      if (args[0] === '/') {\r\n        let func = args[1];\r\n\r\n        if (typeof args[1] === 'object') {\r\n          func = args[1].uses;\r\n        }\r\n\r\n        this._defaultHandler = { handler: func, hooks: args[2] };\r\n      } else {\r\n        this._add(args[0], args[1], args[2]);\r\n      }\r\n    } else if (typeof args[0] === 'object') {\r\n      let orderedRoutes = Object.keys(args[0]).sort(compareUrlDepth);\r\n\r\n      orderedRoutes.forEach(route => {\r\n        this.on(route, args[0][route]);\r\n      });\r\n    }\r\n    return this;\r\n  },\r\n  off: function (handler) {\r\n    if (this._defaultHandler !== null && handler === this._defaultHandler.handler) {\r\n      this._defaultHandler = null;\r\n    } else if (this._notFoundHandler !== null && handler === this._notFoundHandler.handler) {\r\n      this._notFoundHandler = null;\r\n    }\r\n    this._routes = this._routes.reduce((result, r) => {\r\n      if (r.handler !== handler) result.push(r);\r\n      return result;\r\n    }, []);\r\n    return this;\r\n  },\r\n  notFound: function (handler, hooks) {\r\n    this._notFoundHandler = { handler, hooks: hooks };\r\n    return this;\r\n  },\r\n  resolve: function (current) {\r\n    var handler, m;\r\n    var url = (current || this._cLoc()).replace(this._getRoot(), '');\r\n\r\n    if (this._useHash) {\r\n      url = url.replace(new RegExp('^\\/' + this._hash), '/');\r\n    }\r\n\r\n    let GETParameters = extractGETParameters(current || this._cLoc());\r\n    let onlyURL = getOnlyURL(url, this._useHash, this._hash);\r\n\r\n    if (this._paused) return false;\r\n\r\n    if (\r\n      this._lastRouteResolved &&\r\n        onlyURL === this._lastRouteResolved.url &&\r\n        GETParameters === this._lastRouteResolved.query\r\n    ) {\r\n      if (this._lastRouteResolved.hooks && this._lastRouteResolved.hooks.already) {\r\n        this._lastRouteResolved.hooks.already(this._lastRouteResolved.params);\r\n      }\r\n      return false;\r\n    }\r\n\r\n    m = match(onlyURL, this._routes);\r\n\r\n    if (m) {\r\n      this._callLeave();\r\n      this._lastRouteResolved = {\r\n        url: onlyURL,\r\n        query: GETParameters,\r\n        hooks: m.route.hooks,\r\n        params: m.params,\r\n        name: m.route.name\r\n      };\r\n      handler = m.route.handler;\r\n      manageHooks(() => {\r\n        manageHooks(() => {\r\n          m.route.route instanceof RegExp ?\r\n            handler(...(m.match.slice(1, m.match.length))) :\r\n            handler(m.params, GETParameters);\r\n        }, m.route.hooks, m.params, this._genericHooks);\r\n      }, this._genericHooks, m.params);\r\n      return m;\r\n    } else if (this._defaultHandler && (\r\n      onlyURL === '' ||\r\n        onlyURL === '/' ||\r\n        onlyURL === this._hash ||\r\n        isHashedRoot(onlyURL, this._useHash, this._hash)\r\n    )) {\r\n      manageHooks(() => {\r\n        manageHooks(() => {\r\n          this._callLeave();\r\n          this._lastRouteResolved = { url: onlyURL, query: GETParameters, hooks: this._defaultHandler.hooks };\r\n          this._defaultHandler.handler(GETParameters);\r\n        }, this._defaultHandler.hooks);\r\n      }, this._genericHooks);\r\n      return true;\r\n    } else if (this._notFoundHandler) {\r\n      manageHooks(() => {\r\n        manageHooks(() => {\r\n          this._callLeave();\r\n          this._lastRouteResolved = { url: onlyURL, query: GETParameters, hooks: this._notFoundHandler.hooks };\r\n          this._notFoundHandler.handler(GETParameters);\r\n        }, this._notFoundHandler.hooks);\r\n      }, this._genericHooks);\r\n    }\r\n    return false;\r\n  },\r\n  destroy: function () {\r\n    this._routes = [];\r\n    this._destroyed = true;\r\n    this._lastRouteResolved = null;\r\n    this._genericHooks = null;\r\n    clearTimeout(this._listeningInterval);\r\n    if (typeof window !== 'undefined') {\r\n      window.removeEventListener('popstate', this._onLocationChange);\r\n      window.removeEventListener('hashchange', this._onLocationChange);\r\n    }\r\n  },\r\n  updatePageLinks: function () {\r\n    var self = this;\r\n\r\n    if (typeof document === 'undefined') return;\r\n\r\n    this._findLinks().forEach(link => {\r\n      if (!link.hasListenerAttached) {\r\n        link.addEventListener('click', function (e) {\r\n          if((e.ctrlKey || e.metaKey) && e.target.tagName.toLowerCase() == 'a'){ return false; }\r\n          var location = self.getLinkPath(link);\r\n\r\n          if (!self._destroyed) {\r\n            e.preventDefault();\r\n            self.navigate(location.replace(/\\/+$/, '').replace(/^\\/+/, '/'));\r\n          }\r\n        });\r\n        link.hasListenerAttached = true;\r\n      }\r\n    });\r\n  },\r\n  generate: function (name, data = {}) {\r\n    var result = this._routes.reduce((result, route) => {\r\n      var key;\r\n\r\n      if (route.name === name) {\r\n        result = route.route;\r\n        for (key in data) {\r\n          result = result.toString().replace(':' + key, data[key]);\r\n        }\r\n      }\r\n      return result;\r\n    }, '');\r\n\r\n    return this._useHash ? this._hash + result : result;\r\n  },\r\n  link: function (path) {\r\n    return this._getRoot() + path;\r\n  },\r\n  pause: function (status = true) {\r\n    this._paused = status;\r\n    if (status) {\r\n      this._historyAPIUpdateMethod = 'replaceState';\r\n    } else {\r\n      this._historyAPIUpdateMethod = 'pushState';\r\n    }\r\n  },\r\n  resume: function () {\r\n    this.pause(false);\r\n  },\r\n  historyAPIUpdateMethod: function (value) {\r\n    if (typeof value === 'undefined') return this._historyAPIUpdateMethod;\r\n    this._historyAPIUpdateMethod = value;\r\n    return value;\r\n  },\r\n  disableIfAPINotAvailable: function () {\r\n    if (!isPushStateAvailable()) {\r\n      this.destroy();\r\n    }\r\n  },\r\n  lastRouteResolved() {\r\n    return this._lastRouteResolved;\r\n  },\r\n  getLinkPath(link) {\r\n    return link.getAttribute('href');\r\n  },\r\n  hooks(hooks) {\r\n    this._genericHooks = hooks;\r\n  },\r\n  _add: function (route, handler = null, hooks = null) {\r\n    if (typeof route === 'string') {\r\n      route = encodeURI(route);\r\n    }\r\n    this._routes.push(\r\n      typeof handler === 'object' ? {\r\n        route,\r\n        handler: handler.uses,\r\n        name: handler.as,\r\n        hooks: hooks || handler.hooks\r\n      } : { route, handler, hooks: hooks }\r\n    );\r\n\r\n    return this._add;\r\n  },\r\n  _getRoot: function () {\r\n    if (this.root !== null) return this.root;\r\n    this.root = root(this._cLoc().split('?')[0], this._routes);\r\n    return this.root;\r\n  },\r\n  _listen: function () {\r\n    if (this._usePushState) {\r\n      window.addEventListener('popstate', this._onLocationChange);\r\n    } else if (isHashChangeAPIAvailable()) {\r\n      window.addEventListener('hashchange', this._onLocationChange);\r\n    } else {\r\n      let cached = this._cLoc(), current, check;\r\n\r\n      check = () => {\r\n        current = this._cLoc();\r\n        if (cached !== current) {\r\n          cached = current;\r\n          this.resolve();\r\n        }\r\n        this._listeningInterval = setTimeout(check, 200);\r\n      };\r\n      check();\r\n    }\r\n  },\r\n  _cLoc: function () {\r\n    if (typeof window !== 'undefined') {\r\n      if (typeof window.__NAVIGO_WINDOW_LOCATION_MOCK__ !== 'undefined') {\r\n        return window.__NAVIGO_WINDOW_LOCATION_MOCK__;\r\n      }\r\n      return clean(window.location.href);\r\n    }\r\n    return '';\r\n  },\r\n  _findLinks: function () {\r\n    return [].slice.call(document.querySelectorAll('[data-navigo]'));\r\n  },\r\n  _onLocationChange: function () {\r\n    this.resolve();\r\n  },\r\n  _callLeave() {\r\n    const lastRouteResolved = this._lastRouteResolved;\r\n\r\n    if (lastRouteResolved && lastRouteResolved.hooks && lastRouteResolved.hooks.leave) {\r\n      lastRouteResolved.hooks.leave(lastRouteResolved.params);\r\n    }\r\n  }\r\n};\r\n\r\nNavigo.PARAMETER_REGEXP = /([:*])(\\w+)/g;\r\nNavigo.WILDCARD_REGEXP = /\\*/g;\r\nNavigo.REPLACE_VARIABLE_REGEXP = '([^\\/]+)';\r\nNavigo.REPLACE_WILDCARD = '(?:.*)';\r\nNavigo.FOLLOWED_BY_SLASH_REGEXP = '(?:\\/$|$)';\r\nNavigo.MATCH_REGEXP_FLAGS = '';\r\n\r\nexport default Navigo;\r\n"],"names":["isPushStateAvailable","window","history","pushState","Navigo","r","useHash","hash","root","_routes","_useHash","_hash","_paused","_destroyed","_lastRouteResolved","_notFoundHandler","_defaultHandler","_usePushState","_onLocationChange","this","bind","_genericHooks","_historyAPIUpdateMethod","replace","_cLoc","split","_listen","updatePageLinks","clean","s","RegExp","getUrlDepth","url","length","compareUrlDepth","urlA","urlB","match","routes","map","route","paramNames","regexp","PARAMETER_REGEXP","full","dots","name","push","REPLACE_VARIABLE_REGEXP","WILDCARD_REGEXP","REPLACE_WILDCARD","FOLLOWED_BY_SLASH_REGEXP","MATCH_REGEXP_FLAGS","replaceDynamicURLParts","params","names","slice","reduce","value","index","regExpResultToParams","filter","m","findMatchedRoutes","matched","fallbackURL","result","getOnlyURL","cleanGETParam","str","manageHooks","handler","hooks","before","after","prototype","path","absolute","to","_getRoot","resolve","location","href","args","func","_typeof","uses","_add","Object","keys","sort","forEach","on","current","GETParameters","join","extractGETParameters","onlyURL","query","already","_callLeave","_this2","isHashedRoot","_listeningInterval","removeEventListener","self","document","_findLinks","link","hasListenerAttached","addEventListener","e","ctrlKey","metaKey","target","tagName","toLowerCase","getLinkPath","preventDefault","navigate","data","key","toString","status","pause","destroy","getAttribute","encodeURI","as","cached","check","_this3","setTimeout","__NAVIGO_WINDOW_LOCATION_MOCK__","call","querySelectorAll","lastRouteResolved","leave"],"mappings":"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"}